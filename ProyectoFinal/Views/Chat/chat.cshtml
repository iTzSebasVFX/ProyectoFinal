@model int;

@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    var NombreUsuario = HttpContextAccessor.HttpContext?.Session.GetString("NombreUser");
}

<link rel="stylesheet" href="~/css/chat.css" asp-append-version="true">
<script src="https://kit.fontawesome.com/0ec24d2dc8.js" crossorigin="anonymous"></script>
<nav>
    <a asp-action="ListaChats" asp-controller="Chat" class="upload-icon" style="margin-left: 10px;">
        <div class=" pepe">
            <button class="button type1">
                <span class="btn-txt"><i class="fa-solid fa-caret-left fa-beat"></i><a class="decoracion"
                        asp-action="Principal" asp-controller="UserPerfil">Volver</a></span>
            </button>
        </div>
        <span class="tooltip">Lista de Chats</span>
    </a>
    <h1 class="textTitle">@ChatSignalR.controller.ChatController.Lista.GetValueOrDefault(Model)</h1>
</nav>

<div>
    <div>
        <div class="card">
            <input class="form-control" type="text" id="user" value="@NombreUsuario" readonly style="visibility: hidden;">
            <!-- tiene js-->
            <ul class="messageBoxStyled" id="messagesList"></ul>
            <div class="messageBox">
                <div class="fileUploadWrapper">

                    <!-- Ícono de WhatsApp como botón independiente -->
                    <div id="whatsappBtn" style="cursor:pointer; display:flex; align-items:center; gap:5px;">
                        <i class="fa-brands fa-whatsapp" style="color: #63E6BE; font-size: 20px;"></i>
                        <span class="tooltip">Agregar WhatsApp</span>
                    </div>

                    <!-- Caja para ingresar el número -->
                    <div id="whatsappBox" style="display:none; margin-top: 10px;">
                        <input id="phoneInput" type="Number" placeholder="Número" />
                        <button id="sendPhone">
                        </button>
                        <div id="phoneError" style="color: red; font-size: 12px; margin-top: 5px;"></div>
                    </div>

                    <!-- Input de archivo separado con su propio label -->
                    <a asp-action="Juegos" asp-controller="Html" class="upload-icon" style="margin-left: 10px;">
                        <i class="fa-solid fa-gamepad" style="color: #ffffff;"></i>
                        <span class="tooltip">Zona de juegos</span>
                    </a>

                    <input name="file" id="file" type="file" style="display: none;" />
                </div>

                <!-- Input de mensaje común -->
                <input id="message" type="text" placeholder="Escribe tu mensaje..." />
                <button id="sendButton">
                    <svg viewBox="0 0 664 663" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <i class="fa-regular fa-paper-plane" style="color: #ffffff;"></i>
                    </svg>
                </button>
            </div>

        </div>

    </div>

    <div class="row justify-content-center">
        <div class="col-10">
            <ul class="list-group" id="messagesList">
            </ul>
        </div>
    </div>






@*Colocamos el escript de signalR*@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        // Inicializar conexión
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub")
            .build();

        connection.start().then(() => {
            connection.invoke("AddGroup", "@Model");
        }).catch(err => console.error(err.toString()));

        // Enviar mensaje
        document.getElementById("sendButton").addEventListener("click", function (e) {
            let room = @Model;
            const user = document.getElementById("user").value; // Asegúrate de tener este input si se usa
            const messageInput = document.getElementById("message");
            const message = messageInput.value;

            if (message.trim() !== "") {
                connection.invoke("SendMessage", room, user, message).catch(err => console.error(err.toString()));
                messageInput.value = "";
                messageInput.focus();
            }

            e.preventDefault(); // Evita recarga
        });

        connection.on("ReceiveMessage", function (user, message) {
            const li = document.createElement("li");
            li.textContent = `${user}: ${message}`;
            document.getElementById("messagesList").appendChild(li);
        });
    </script>
    <script src="~/js/ChatNumber.js"></script>
    <script src="~/js/Tema.js"></script>